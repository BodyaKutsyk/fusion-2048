{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/scripts/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $c8dc294372a77044$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\n\"use strict\";\nvar $c8dc294372a77044$var$GameClass = /*#__PURE__*/ function() {\n    function GameClass(DOM_CELLS) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, GameClass);\n        this.HTML_CELLS = DOM_CELLS;\n        this.HTML_MATRIX = [];\n        this.madeMove = false;\n        this.isGameStarted = false;\n        this.winStatus = false;\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(GameClass, [\n        {\n            key: \"randomNumber\",\n            value: function randomNumber(min, max) {\n                return Math.floor(Math.random() * (max - min) + min);\n            }\n        },\n        {\n            key: \"rotateMatrix\",\n            value: function rotateMatrix(matrix) {\n                var matrixCopy = matrix.map(function(elem) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(elem);\n                });\n                for(var row = 0; row < matrix.length; row++)for(var column = 0; column < matrix[row].length; column++)matrixCopy[row][column] = matrix[matrix.length - 1 - column][row];\n                return matrixCopy;\n            }\n        },\n        {\n            key: \"reverseRotate\",\n            value: function reverseRotate(matrix) {\n                var matrixCopy = matrix.map(function(elem) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(elem);\n                });\n                for(var row = 0; row < matrix.length; row++)for(var column = 0; column < matrix[row].length; column++)matrixCopy[row][column] = matrix[column][matrix[row].length - 1 - row];\n                return matrixCopy;\n            }\n        },\n        {\n            key: \"randomCell\",\n            value: function randomCell(matrix) {\n                var FREE_FIELD_CELLS = [];\n                for(var row = 0; row < matrix.length; row++){\n                    var tempRow = [\n                        row\n                    ];\n                    for(var column = 0; column < matrix[row].length; column++)if (matrix[row][column] === 0) tempRow.push(column);\n                    if (tempRow.length > 1) FREE_FIELD_CELLS.push(tempRow);\n                }\n                var INDEX_OF_RANDOM_ROW = this.randomNumber(0, FREE_FIELD_CELLS.length);\n                var RANDOM_ROW = FREE_FIELD_CELLS[INDEX_OF_RANDOM_ROW];\n                if (RANDOM_ROW) {\n                    var RANDOM_CELL = this.randomNumber(1, RANDOM_ROW.length);\n                    var CELL_VALUE = Math.random() < 0.9 ? 2 : 4;\n                    var selectedRow = RANDOM_ROW[0];\n                    var selectedColumn = RANDOM_ROW[RANDOM_CELL];\n                    matrix[selectedRow][selectedColumn] = CELL_VALUE;\n                    return [\n                        selectedRow,\n                        selectedColumn\n                    ];\n                }\n            }\n        },\n        {\n            key: \"canMoveVerticaly\",\n            value: function canMoveVerticaly(matrix) {\n                for(var i = 0; i < matrix.length; i++)for(var j = 0; j < matrix[i].length - 1; j++){\n                    if (matrix[i][j] === matrix[i][j + 1]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"canMoveHorizontaly\",\n            value: function canMoveHorizontaly(matrix) {\n                for(var i = 0; i < matrix.length - 1; i++)for(var j = 0; j < matrix[i].length; j++){\n                    if (matrix[i][j] === matrix[i + 1][j]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"hasEmptySpace\",\n            value: function hasEmptySpace(matrix) {\n                for(var i = 0; i < matrix.length; i++)for(var j = 0; j < matrix[i].length; j++){\n                    if (matrix[i][j] === 0) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft(matrix, row, data, repeat) {\n                var _loop = function(column) {\n                    if (tempRow[column] !== 0) {\n                        var _loop = function(i) {\n                            if (tempRow[i] === 0) {\n                                if (!repeat) {\n                                    tempRow[i] = tempRow[columnCopy];\n                                    moveCount[row][column]++;\n                                    tempRow[columnCopy] = 0;\n                                    if (!data[column].after) {\n                                        data[column].after = column;\n                                        data[column].before = column;\n                                    }\n                                    data[column].after--;\n                                    data[column].before = column;\n                                    columnCopy--;\n                                }\n                                if (repeat) {\n                                    var isObjectEmpty = true;\n                                    tempRow[i] = tempRow[columnCopy];\n                                    tempRow[columnCopy] = 0;\n                                    data.forEach(function(elem) {\n                                        if (elem.after === columnCopy) {\n                                            moveCount[row][elem.before]++;\n                                            isObjectEmpty = false;\n                                        }\n                                    });\n                                    if (isObjectEmpty) {\n                                        for(var limith = column; limith < tempRow.length; limith++)if (tempRow[limith] === 0) moveCount[row][limith]++;\n                                    }\n                                }\n                            }\n                        };\n                        var columnCopy = column;\n                        for(var i = column - 1; i >= 0; i--)_loop(i);\n                    }\n                };\n                var moveCount = this.moveList;\n                var tempRow = matrix[row];\n                for(var column = 0; column < tempRow.length; column++)_loop(column);\n                return tempRow;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight(matrix, row, data, repeat) {\n                var _loop = function(column) {\n                    if (tempRow[column] !== 0) {\n                        var _loop = function(i) {\n                            if (tempRow[i] === 0) {\n                                if (!repeat) {\n                                    tempRow[i] = tempRow[columnCopy];\n                                    moveCount[row][column]++;\n                                    tempRow[columnCopy] = 0;\n                                    if (!data[column].after) data[column].after = column;\n                                    data[column].after++;\n                                    data[column].before = column;\n                                    columnCopy++;\n                                }\n                                if (repeat) {\n                                    var isObjectEmpty = true;\n                                    tempRow[i] = tempRow[columnCopy];\n                                    tempRow[columnCopy] = 0;\n                                    data.forEach(function(elem) {\n                                        if (elem.after === columnCopy) {\n                                            moveCount[row][elem.before]++;\n                                            isObjectEmpty = false;\n                                        }\n                                    });\n                                    if (isObjectEmpty) {\n                                        for(var limith = column; limith >= 0; limith--)if (tempRow[limith] === 0) moveCount[row][limith]++;\n                                    }\n                                }\n                            }\n                        };\n                        var columnCopy = column;\n                        for(var i = column + 1; i < tempRow.length; i++)_loop(i);\n                    }\n                };\n                var moveCount = this.moveList;\n                var tempRow = matrix[row];\n                for(var column = tempRow.length - 1; column >= 0; column--)_loop(column);\n                return tempRow;\n            }\n        },\n        {\n            key: \"mergeLeft\",\n            value: function mergeLeft(tempRow, data, moveCount) {\n                var _this = this, _loop = function(i1) {\n                    if (tempRow[i1] === tempRow[i1 + 1] && tempRow[i1] !== 0) {\n                        tempRow[i1] += tempRow[i1 + 1];\n                        _this.score += tempRow[i1];\n                        var isObjectEmpty = true;\n                        data.forEach(function(elem) {\n                            if (elem.after === i1 + 1) {\n                                moveCount[elem.before]++;\n                                isObjectEmpty = false;\n                            }\n                        });\n                        if (isObjectEmpty) moveCount[i1 + 1]++;\n                        tempRow[i1 + 1] = 0;\n                        i1++;\n                    }\n                    i = i1, void 0;\n                };\n                for(var i = 0; i < tempRow.length; i++)_loop(i);\n            }\n        },\n        {\n            key: \"mergeRight\",\n            value: function mergeRight(tempRow, data, moveCount) {\n                var _this = this, _loop = function(i1) {\n                    if (tempRow[i1] === tempRow[i1 - 1] && tempRow[i1] !== 0) {\n                        tempRow[i1] += tempRow[i1 - 1];\n                        _this.score += tempRow[i1];\n                        var isObjectEmpty = true;\n                        data.forEach(function(elem) {\n                            if (elem.after === i1 - 1) {\n                                moveCount[elem.before]++;\n                                isObjectEmpty = false;\n                            }\n                        });\n                        if (isObjectEmpty) moveCount[i1 - 1]++;\n                        tempRow[i1 - 1] = 0;\n                        i1--;\n                    }\n                    i = i1, void 0;\n                };\n                for(var i = tempRow.length - 1; i >= 0; i--)_loop(i);\n            }\n        },\n        {\n            key: \"moveField\",\n            value: function moveField(field, direction, moveCount) {\n                var _this = this;\n                var reversedField = this.rotateMatrix(field);\n                for(var i = 0; i < field.length; i++){\n                    var tempRow = field[i];\n                    var moveData = [\n                        {},\n                        {},\n                        {},\n                        {}\n                    ];\n                    var repeat = 0;\n                    switch(direction){\n                        case \"ArrowLeft\":\n                            tempRow = this.moveLeft(field, i, moveData, repeat);\n                            repeat = 1;\n                            this.mergeLeft(tempRow, moveData, moveCount[i]);\n                            field[i] = tempRow;\n                            field[i] = this.moveLeft(field, i, moveData, repeat);\n                            break;\n                        case \"ArrowRight\":\n                            tempRow = this.moveRight(field, i, moveData, repeat);\n                            repeat = 1;\n                            this.mergeRight(tempRow, moveData, moveCount[i]);\n                            field[i] = tempRow;\n                            field[i] = this.moveRight(field, i, moveData, repeat);\n                            break;\n                        case \"ArrowUp\":\n                            tempRow = this.moveRight(reversedField, i, moveData, repeat);\n                            repeat = 1;\n                            this.mergeRight(tempRow, moveData, moveCount[i]);\n                            field[i] = tempRow;\n                            field[i] = this.moveRight(reversedField, i, moveCount, moveData, repeat);\n                            break;\n                        case \"ArrowDown\":\n                            tempRow = this.moveLeft(reversedField, i, moveData, repeat);\n                            repeat = 1;\n                            this.mergeLeft(tempRow, moveData, moveCount[i]);\n                            field[i] = tempRow;\n                            field[i] = this.moveLeft(reversedField, i, moveData, repeat);\n                            break;\n                    }\n                }\n                if (direction === \"ArrowUp\" || direction === \"ArrowDown\") {\n                    field.forEach(function(elem, i) {\n                        field[i] = _this.reverseRotate(reversedField)[i];\n                    });\n                    this.moveList = this.reverseRotate(moveCount);\n                }\n            }\n        },\n        {\n            key: \"visualize\",\n            value: function visualize(direction, prevField) {\n                var _this = this;\n                var field = this.FIELD;\n                var htmlField = this.HTML_MATRIX;\n                var moveCount = this.moveList;\n                var prevFieldCopy = prevField;\n                if (!prevField) prevFieldCopy = field;\n                var counter = 0;\n                var canMove = true;\n                for(var i = 0; i < prevFieldCopy.length; i++){\n                    for(var j = 0; j < prevFieldCopy[i].length; j++)if (prevFieldCopy[i][j] === field[i][j]) counter++;\n                }\n                if (counter === field.length * field.length) canMove = false;\n                for(var row = 0; row < prevFieldCopy.length; row++)for(var column = 0; column < prevFieldCopy[row].length; column++){\n                    while(htmlField[row][column].firstChild)htmlField[row][column].removeChild(htmlField[row][column].lastChild);\n                    var HTML_CELL = document.createElement(\"div\");\n                    HTML_CELL.innerText = \"\";\n                    HTML_CELL.classList = \"\";\n                    if (prevFieldCopy[row][column] > 0) {\n                        HTML_CELL.style.zIndex = \"2\";\n                        HTML_CELL.innerText = \"\".concat(prevFieldCopy[row][column]);\n                        this.animateMovement(HTML_CELL, direction, moveCount[row][column]);\n                        HTML_CELL.classList = \"\\n          field-cell\\n          field-cell--inner-block\\n          field-cell--\".concat(prevFieldCopy[row][column]);\n                        htmlField[row][column].appendChild(HTML_CELL);\n                    }\n                }\n                setTimeout(function() {\n                    for(var row = 0; row < field.length; row++)for(var column = 0; column < field[row].length; column++){\n                        var HTML_EL = htmlField[row][column];\n                        while(HTML_EL.firstChild)HTML_EL.removeChild(HTML_EL.lastChild);\n                        var HTML_CELL = document.createElement(\"div\");\n                        HTML_CELL.innerText = \"\";\n                        HTML_CELL.classList = \"\";\n                        if (field[row][column] > 0) {\n                            HTML_CELL.style.zIndex = \"2\";\n                            HTML_CELL.innerText = \"\".concat(field[row][column]);\n                            HTML_CELL.classList = \"\\n            field-cell\\n            field-cell--inner-block\\n            field-cell--\".concat(field[row][column]);\n                            htmlField[row][column].appendChild(HTML_CELL);\n                        }\n                        moveCount[row][column] = 0;\n                    }\n                    if (_this.hasEmptySpace(field) && canMove && _this.madeMove) {\n                        var HTML_CELL1 = document.createElement(\"div\");\n                        setTimeout(function() {\n                            var COORDS = _this.randomCell(field);\n                            HTML_CELL1.innerText = \"\".concat(field[COORDS[0]][COORDS[1]]);\n                            HTML_CELL1.classList = \"\\n          field-cell\\n          field-cell--inner-block\\n          only-created\\n          field-cell--\".concat(field[COORDS[0]][COORDS[1]]);\n                            htmlField[COORDS[0]][COORDS[1]].appendChild(HTML_CELL1);\n                        }, 100);\n                    }\n                }, 50);\n            }\n        },\n        {\n            key: \"animateMovement\",\n            value: function animateMovement(HTML_CELL, direction, MOVE_SCORE) {\n                var SELL_SIZE = 85;\n                var TOTAL_PATH = SELL_SIZE * MOVE_SCORE;\n                var moveDirection = \"\";\n                var movement = 0;\n                switch(direction){\n                    case \"ArrowUp\":\n                        moveDirection = \"top\";\n                        break;\n                    case \"ArrowDown\":\n                        moveDirection = \"bottom\";\n                        break;\n                    case \"ArrowLeft\":\n                        moveDirection = \"left\";\n                        break;\n                    case \"ArrowRight\":\n                        moveDirection = \"right\";\n                        break;\n                }\n                HTML_CELL.style[moveDirection] = \"0px\";\n                HTML_CELL.style.zIndex = \"1\";\n                setTimeout(function() {\n                    movement += TOTAL_PATH / MOVE_SCORE;\n                    if (movement >= TOTAL_PATH) movement = TOTAL_PATH;\n                    HTML_CELL.style[moveDirection] = -TOTAL_PATH + \"px\";\n                }, 10);\n            }\n        },\n        {\n            key: \"checkWinState\",\n            value: function checkWinState() {\n                var _this = this;\n                var FIELD = this.FIELD;\n                FIELD.forEach(function(row) {\n                    row.forEach(function(column) {\n                        if (column === 2048) _this.winStatus = true;\n                    });\n                });\n                return this.winStatus;\n            }\n        }\n    ], [\n        {\n            key: \"makeMatrix\",\n            value: function makeMatrix(array) {\n                var OUTPUT_ARRAY = [];\n                var counter = 0;\n                if (!array) for(var i = 0; i < 4; i++){\n                    OUTPUT_ARRAY.push([]);\n                    for(var j = 0; j < 4; j++)OUTPUT_ARRAY[i].push(0);\n                }\n                if (array) for(var row = 0; row < array.length / 4; row++){\n                    OUTPUT_ARRAY.push([]);\n                    for(var column = 0; column < array.length / 4; column++){\n                        OUTPUT_ARRAY[row].push(array[counter]);\n                        counter++;\n                    }\n                }\n                return OUTPUT_ARRAY;\n            }\n        }\n    ]);\n    return GameClass;\n}();\n$c8dc294372a77044$exports = {\n    GameClass: $c8dc294372a77044$var$GameClass\n};\n\n\nvar $197cd56b15c33885$require$GameClass = $c8dc294372a77044$exports.GameClass;\nvar $197cd56b15c33885$var$HTML_CELLS = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$Game = new $197cd56b15c33885$require$GameClass($197cd56b15c33885$var$HTML_CELLS);\n$197cd56b15c33885$var$Game.FIELD = $197cd56b15c33885$require$GameClass.makeMatrix();\n$197cd56b15c33885$var$Game.moveList = $197cd56b15c33885$require$GameClass.makeMatrix();\n$197cd56b15c33885$var$Game.HTML_MATRIX = $197cd56b15c33885$require$GameClass.makeMatrix($197cd56b15c33885$var$HTML_CELLS);\nfunction $197cd56b15c33885$var$eventListener(keyEvent) {\n    var PREV_FIELD = $197cd56b15c33885$var$Game.FIELD.map(function(elem) {\n        return (0, $227c6742e0ff6f82$export$71511d61b312f219)(elem);\n    });\n    $197cd56b15c33885$var$Game.madeMove = true;\n    $197cd56b15c33885$var$Game.moveField($197cd56b15c33885$var$Game.FIELD, keyEvent.key, $197cd56b15c33885$var$Game.moveList);\n    $197cd56b15c33885$var$Game.visualize(keyEvent.key, PREV_FIELD);\n    for(var i = 0; i < $197cd56b15c33885$var$Game.moveList.length; i++)for(var j = 0; j < $197cd56b15c33885$var$Game.moveList.length; j++)$197cd56b15c33885$var$Game.moveList[i][j] = 0;\n    document.querySelector(\".game-score\").innerText = \"\".concat($197cd56b15c33885$var$Game.score);\n    if (!$197cd56b15c33885$var$Game.canMoveHorizontaly($197cd56b15c33885$var$Game.FIELD) && !$197cd56b15c33885$var$Game.canMoveVerticaly($197cd56b15c33885$var$Game.FIELD) && !$197cd56b15c33885$var$Game.hasEmptySpace($197cd56b15c33885$var$Game.FIELD)) {\n        document.querySelector(\".game-field__game-over\").style.display = \"flex\";\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$eventListener);\n        setTimeout(function() {\n            document.querySelector(\".game-field__game-over\").style.opacity = \"1\";\n            document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n        }, 10);\n    } else if ($197cd56b15c33885$var$Game.winStatus) {\n        document.querySelector(\".game-field__game-win\").style.display = \"flex\";\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$eventListener);\n        setTimeout(function() {\n            document.querySelector(\".game-field__game-win\").style.opacity = \"1\";\n            document.querySelector(\".message-win\").classList.remove(\"hidden\");\n        }, 10);\n    }\n}\ndocument.body.querySelector(\".button\").addEventListener(\"click\", function() {\n    document.querySelector(\".message-start\").classList.add(\"hidden\");\n    if ($197cd56b15c33885$var$Game.isGameStarted) {\n        $197cd56b15c33885$var$Game.FIELD.forEach(function(elem, row) {\n            elem.forEach(function(secEl, column) {\n                $197cd56b15c33885$var$Game.FIELD[row][column] = 0;\n            });\n        });\n        $197cd56b15c33885$var$HTML_CELLS.forEach(function(cell) {\n            cell.innerHTML = \"\";\n            while(cell.firstChild)cell.removeChild(cell.firstChild);\n        });\n        document.body.querySelector(\"button\").classList = \"button start\";\n        document.body.querySelector(\"button\").innerHTML = \"Start\";\n        document.body.querySelector(\".game-score\").innerHTML = \"0\";\n        document.body.querySelector(\".game-field__game-over\").style.display = \"none\";\n        document.body.querySelector(\".game-field__game-win\").style.display = \"none\";\n        document.body.querySelector(\".message-lose\").classList.add(\"hidden\");\n        document.body.querySelector(\".message-win\").classList.add(\"hidden\");\n        // document.body.querySelector('.message-start').classList.remove('hidden');\n        $197cd56b15c33885$var$Game.madeMove = false;\n        $197cd56b15c33885$var$Game.score = 0;\n    }\n    if (!$197cd56b15c33885$var$Game.madeMove) {\n        setTimeout(function() {\n            $197cd56b15c33885$var$Game.randomCell($197cd56b15c33885$var$Game.FIELD);\n            $197cd56b15c33885$var$Game.randomCell($197cd56b15c33885$var$Game.FIELD);\n            $197cd56b15c33885$var$Game.visualize($197cd56b15c33885$var$Game.FIELD, $197cd56b15c33885$var$Game.HTML_MATRIX, $197cd56b15c33885$var$Game.moveList);\n        }, 50);\n        document.querySelector(\".button\").classList = \"button restart\";\n        document.querySelector(\".button\").innerText = \"Restart\";\n        $197cd56b15c33885$var$Game.isGameStarted = true;\n    }\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$eventListener);\n});\n\n})();\n//# sourceMappingURL=index.6da13912.js.map\n","'use strict';\n\nconst { GameClass } = require('./modules/Game.class');\n\nconst HTML_CELLS = document.querySelectorAll('.field-cell');\nconst Game = new GameClass(HTML_CELLS);\n\nGame.FIELD = GameClass.makeMatrix();\nGame.moveList = GameClass.makeMatrix();\nGame.HTML_MATRIX = GameClass.makeMatrix(HTML_CELLS);\n\nfunction eventListener(keyEvent) {\n  const PREV_FIELD = Game.FIELD.map((elem) => [...elem]);\n\n  Game.madeMove = true;\n\n  Game.moveField(Game.FIELD, keyEvent.key, Game.moveList);\n  Game.visualize(keyEvent.key, PREV_FIELD);\n\n  for (let i = 0; i < Game.moveList.length; i++) {\n    for (let j = 0; j < Game.moveList.length; j++) {\n      Game.moveList[i][j] = 0;\n    }\n  }\n\n  document.querySelector('.game-score').innerText = `${Game.score}`;\n\n  if (\n    !Game.canMoveHorizontaly(Game.FIELD)\n    && !Game.canMoveVerticaly(Game.FIELD)\n    && !Game.hasEmptySpace(Game.FIELD)\n  ) {\n    document.querySelector('.game-field__game-over').style.display = 'flex';\n    document.removeEventListener('keydown', eventListener);\n\n    setTimeout(() => {\n      document.querySelector('.game-field__game-over').style.opacity = '1';\n      document.querySelector('.message-lose').classList.remove('hidden');\n    }, 10);\n  } else if (Game.winStatus) {\n    document.querySelector('.game-field__game-win').style.display = 'flex';\n    document.removeEventListener('keydown', eventListener);\n\n    setTimeout(() => {\n      document.querySelector('.game-field__game-win').style.opacity = '1';\n      document.querySelector('.message-win').classList.remove('hidden');\n    }, 10);\n  }\n}\n\ndocument.body.querySelector('.button').addEventListener('click', () => {\n  document.querySelector('.message-start').classList.add('hidden');\n\n  if (Game.isGameStarted) {\n    Game.FIELD.forEach((elem, row) => {\n      elem.forEach((secEl, column) => {\n        Game.FIELD[row][column] = 0;\n      });\n    });\n\n    HTML_CELLS.forEach((cell) => {\n      cell.innerHTML = '';\n\n      while (cell.firstChild) {\n        cell.removeChild(cell.firstChild);\n      }\n    });\n\n    document.body.querySelector('button').classList = 'button start';\n    document.body.querySelector('button').innerHTML = 'Start';\n    document.body.querySelector('.game-score').innerHTML = '0';\n\n    document.body.querySelector('.game-field__game-over').style.display\n      = 'none';\n\n    document.body.querySelector('.game-field__game-win').style.display = 'none';\n\n    document.body.querySelector('.message-lose').classList.add('hidden');\n    document.body.querySelector('.message-win').classList.add('hidden');\n    // document.body.querySelector('.message-start').classList.remove('hidden');\n    Game.madeMove = false;\n    Game.score = 0;\n  }\n\n  if (!Game.madeMove) {\n    setTimeout(() => {\n      Game.randomCell(Game.FIELD);\n      Game.randomCell(Game.FIELD);\n      Game.visualize(Game.FIELD, Game.HTML_MATRIX, Game.moveList);\n    }, 50);\n\n    document.querySelector('.button').classList = 'button restart';\n    document.querySelector('.button').innerText = 'Restart';\n    Game.isGameStarted = true;\n  }\n\n  document.addEventListener('keydown', eventListener);\n});\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\nclass GameClass {\n  constructor(DOM_CELLS) {\n    this.HTML_CELLS = DOM_CELLS;\n    this.HTML_MATRIX = [];\n    this.madeMove = false;\n    this.isGameStarted = false;\n    this.winStatus = false;\n    this.score = 0;\n  }\n\n  randomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  static makeMatrix(array) {\n    const OUTPUT_ARRAY = [];\n    let counter = 0;\n\n    if (!array) {\n      for (let i = 0; i < 4; i++) {\n        OUTPUT_ARRAY.push([]);\n\n        for (let j = 0; j < 4; j++) {\n          OUTPUT_ARRAY[i].push(0);\n        }\n      }\n    }\n\n    if (array) {\n      for (let row = 0; row < array.length / 4; row++) {\n        OUTPUT_ARRAY.push([]);\n\n        for (let column = 0; column < array.length / 4; column++) {\n          OUTPUT_ARRAY[row].push(array[counter]);\n          counter++;\n        }\n      }\n    }\n\n    return OUTPUT_ARRAY;\n  }\n\n  rotateMatrix(matrix) {\n    const matrixCopy = matrix.map((elem) => [...elem]);\n\n    for (let row = 0; row < matrix.length; row++) {\n      for (let column = 0; column < matrix[row].length; column++) {\n        matrixCopy[row][column] = matrix[matrix.length - 1 - column][row];\n      }\n    }\n\n    return matrixCopy;\n  }\n\n  reverseRotate(matrix) {\n    const matrixCopy = matrix.map((elem) => [...elem]);\n\n    for (let row = 0; row < matrix.length; row++) {\n      for (let column = 0; column < matrix[row].length; column++) {\n        matrixCopy[row][column] = matrix[column][matrix[row].length - 1 - row];\n      }\n    }\n\n    return matrixCopy;\n  }\n\n  randomCell(matrix) {\n    const FREE_FIELD_CELLS = [];\n\n    for (let row = 0; row < matrix.length; row++) {\n      const tempRow = [row];\n\n      for (let column = 0; column < matrix[row].length; column++) {\n        if (matrix[row][column] === 0) {\n          tempRow.push(column);\n        }\n      }\n\n      if (tempRow.length > 1) {\n        FREE_FIELD_CELLS.push(tempRow);\n      }\n    }\n\n    const INDEX_OF_RANDOM_ROW = this.randomNumber(0, FREE_FIELD_CELLS.length);\n    const RANDOM_ROW = FREE_FIELD_CELLS[INDEX_OF_RANDOM_ROW];\n\n    if (RANDOM_ROW) {\n      const RANDOM_CELL = this.randomNumber(1, RANDOM_ROW.length);\n\n      const CELL_VALUE = Math.random() < 0.9 ? 2 : 4;\n\n      const selectedRow = RANDOM_ROW[0];\n      const selectedColumn = RANDOM_ROW[RANDOM_CELL];\n\n      matrix[selectedRow][selectedColumn] = CELL_VALUE;\n\n      return [selectedRow, selectedColumn];\n    }\n  }\n\n  canMoveVerticaly(matrix) {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length - 1; j++) {\n        if (matrix[i][j] === matrix[i][j + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  canMoveHorizontaly(matrix) {\n    for (let i = 0; i < matrix.length - 1; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (matrix[i][j] === matrix[i + 1][j]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  hasEmptySpace(matrix) {\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        if (matrix[i][j] === 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  moveLeft(matrix, row, data, repeat) {\n    const moveCount = this.moveList;\n    const tempRow = matrix[row];\n\n    for (let column = 0; column < tempRow.length; column++) {\n      if (tempRow[column] !== 0) {\n        let columnCopy = column;\n\n        for (let i = column - 1; i >= 0; i--) {\n          if (tempRow[i] === 0) {\n            if (!repeat) {\n              tempRow[i] = tempRow[columnCopy];\n              moveCount[row][column]++;\n\n              tempRow[columnCopy] = 0;\n\n              if (!data[column].after) {\n                data[column].after = column;\n                data[column].before = column;\n              }\n\n              data[column].after--;\n              data[column].before = column;\n              columnCopy--;\n            }\n\n            if (repeat) {\n              let isObjectEmpty = true;\n\n              tempRow[i] = tempRow[columnCopy];\n              tempRow[columnCopy] = 0;\n\n              data.forEach((elem) => {\n                if (elem.after === columnCopy) {\n                  moveCount[row][elem.before]++;\n                  isObjectEmpty = false;\n                }\n              });\n\n              if (isObjectEmpty) {\n                for (let limith = column; limith < tempRow.length; limith++) {\n                  if (tempRow[limith] === 0) {\n                    moveCount[row][limith]++;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return tempRow;\n  }\n\n  moveRight(matrix, row, data, repeat) {\n    const moveCount = this.moveList;\n    const tempRow = matrix[row];\n\n    for (let column = tempRow.length - 1; column >= 0; column--) {\n      if (tempRow[column] !== 0) {\n        let columnCopy = column;\n\n        for (let i = column + 1; i < tempRow.length; i++) {\n          if (tempRow[i] === 0) {\n            if (!repeat) {\n              tempRow[i] = tempRow[columnCopy];\n              moveCount[row][column]++;\n              tempRow[columnCopy] = 0;\n\n              if (!data[column].after) {\n                data[column].after = column;\n              }\n\n              data[column].after++;\n              data[column].before = column;\n              columnCopy++;\n            }\n\n            if (repeat) {\n              let isObjectEmpty = true;\n\n              tempRow[i] = tempRow[columnCopy];\n              tempRow[columnCopy] = 0;\n\n              data.forEach((elem) => {\n                if (elem.after === columnCopy) {\n                  moveCount[row][elem.before]++;\n                  isObjectEmpty = false;\n                }\n              });\n\n              if (isObjectEmpty) {\n                for (let limith = column; limith >= 0; limith--) {\n                  if (tempRow[limith] === 0) {\n                    moveCount[row][limith]++;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return tempRow;\n  }\n\n  mergeLeft(tempRow, data, moveCount) {\n    for (let i = 0; i < tempRow.length; i++) {\n      if (tempRow[i] === tempRow[i + 1] && tempRow[i] !== 0) {\n        tempRow[i] += tempRow[i + 1];\n        this.score += tempRow[i];\n\n        let isObjectEmpty = true;\n\n        data.forEach((elem) => {\n          if (elem.after === i + 1) {\n            moveCount[elem.before]++;\n            isObjectEmpty = false;\n          }\n        });\n\n        if (isObjectEmpty) {\n          moveCount[i + 1]++;\n        }\n\n        tempRow[i + 1] = 0;\n        i++;\n      }\n    }\n  }\n\n  mergeRight(tempRow, data, moveCount) {\n    for (let i = tempRow.length - 1; i >= 0; i--) {\n      if (tempRow[i] === tempRow[i - 1] && tempRow[i] !== 0) {\n        tempRow[i] += tempRow[i - 1];\n        this.score += tempRow[i];\n\n        let isObjectEmpty = true;\n\n        data.forEach((elem) => {\n          if (elem.after === i - 1) {\n            moveCount[elem.before]++;\n            isObjectEmpty = false;\n          }\n        });\n\n        if (isObjectEmpty) {\n          moveCount[i - 1]++;\n        }\n\n        tempRow[i - 1] = 0;\n        i--;\n      }\n    }\n  }\n\n  moveField(field, direction, moveCount) {\n    const reversedField = this.rotateMatrix(field);\n\n    for (let i = 0; i < field.length; i++) {\n      let tempRow = field[i];\n      const moveData = [{}, {}, {}, {}];\n      let repeat = 0;\n\n      switch (direction) {\n        case 'ArrowLeft':\n          tempRow = this.moveLeft(field, i, moveData, repeat);\n          repeat = 1;\n          this.mergeLeft(tempRow, moveData, moveCount[i]);\n          field[i] = tempRow;\n          field[i] = this.moveLeft(field, i, moveData, repeat);\n          break;\n\n        case 'ArrowRight':\n          tempRow = this.moveRight(field, i, moveData, repeat);\n          repeat = 1;\n          this.mergeRight(tempRow, moveData, moveCount[i]);\n          field[i] = tempRow;\n          field[i] = this.moveRight(field, i, moveData, repeat);\n          break;\n\n        case 'ArrowUp':\n          tempRow = this.moveRight(reversedField, i, moveData, repeat);\n          repeat = 1;\n          this.mergeRight(tempRow, moveData, moveCount[i]);\n          field[i] = tempRow;\n\n          field[i] = this.moveRight(\n            reversedField,\n            i,\n            moveCount,\n            moveData,\n            repeat,\n          );\n          break;\n\n        case 'ArrowDown':\n          tempRow = this.moveLeft(reversedField, i, moveData, repeat);\n          repeat = 1;\n          this.mergeLeft(tempRow, moveData, moveCount[i]);\n          field[i] = tempRow;\n          field[i] = this.moveLeft(reversedField, i, moveData, repeat);\n          break;\n      }\n    }\n\n    if (direction === 'ArrowUp' || direction === 'ArrowDown') {\n      field.forEach((elem, i) => {\n        field[i] = this.reverseRotate(reversedField)[i];\n      });\n\n      this.moveList = this.reverseRotate(moveCount);\n    }\n  }\n\n  visualize(direction, prevField) {\n    const field = this.FIELD;\n    const htmlField = this.HTML_MATRIX;\n    const moveCount = this.moveList;\n    let prevFieldCopy = prevField;\n\n    if (!prevField) {\n      prevFieldCopy = field;\n    }\n\n    let counter = 0;\n    let canMove = true;\n\n    for (let i = 0; i < prevFieldCopy.length; i++) {\n      for (let j = 0; j < prevFieldCopy[i].length; j++) {\n        if (prevFieldCopy[i][j] === field[i][j]) {\n          counter++;\n        }\n      }\n    }\n\n    if (counter === field.length * field.length) {\n      canMove = false;\n    }\n\n    for (let row = 0; row < prevFieldCopy.length; row++) {\n      for (let column = 0; column < prevFieldCopy[row].length; column++) {\n        while (htmlField[row][column].firstChild) {\n          htmlField[row][column].removeChild(htmlField[row][column].lastChild);\n        }\n\n        const HTML_CELL = document.createElement('div');\n\n        HTML_CELL.innerText = '';\n        HTML_CELL.classList = '';\n\n        if (prevFieldCopy[row][column] > 0) {\n          HTML_CELL.style.zIndex = '2';\n          HTML_CELL.innerText = `${prevFieldCopy[row][column]}`;\n\n          this.animateMovement(HTML_CELL, direction, moveCount[row][column]);\n\n          HTML_CELL.classList = `\n          field-cell\n          field-cell--inner-block\n          field-cell--${prevFieldCopy[row][column]}`;\n          htmlField[row][column].appendChild(HTML_CELL);\n        }\n      }\n    }\n\n    setTimeout(() => {\n      for (let row = 0; row < field.length; row++) {\n        for (let column = 0; column < field[row].length; column++) {\n          const HTML_EL = htmlField[row][column];\n\n          while (HTML_EL.firstChild) {\n            HTML_EL.removeChild(HTML_EL.lastChild);\n          }\n\n          const HTML_CELL = document.createElement('div');\n\n          HTML_CELL.innerText = '';\n          HTML_CELL.classList = '';\n\n          if (field[row][column] > 0) {\n            HTML_CELL.style.zIndex = '2';\n            HTML_CELL.innerText = `${field[row][column]}`;\n\n            HTML_CELL.classList = `\n            field-cell\n            field-cell--inner-block\n            field-cell--${field[row][column]}`;\n            htmlField[row][column].appendChild(HTML_CELL);\n          }\n          moveCount[row][column] = 0;\n        }\n      }\n\n      if (this.hasEmptySpace(field) && canMove && this.madeMove) {\n        const HTML_CELL = document.createElement('div');\n\n        setTimeout(() => {\n          const COORDS = this.randomCell(field);\n\n          HTML_CELL.innerText = `${field[COORDS[0]][COORDS[1]]}`;\n\n          HTML_CELL.classList = `\n          field-cell\n          field-cell--inner-block\n          only-created\n          field-cell--${field[COORDS[0]][COORDS[1]]}`;\n          htmlField[COORDS[0]][COORDS[1]].appendChild(HTML_CELL);\n        }, 100);\n      }\n    }, 50);\n  }\n\n  animateMovement(HTML_CELL, direction, MOVE_SCORE) {\n    const SELL_SIZE = 85;\n    const TOTAL_PATH = SELL_SIZE * MOVE_SCORE;\n    let moveDirection = '';\n    let movement = 0;\n\n    switch (direction) {\n      case 'ArrowUp':\n        moveDirection = 'top';\n        break;\n      case 'ArrowDown':\n        moveDirection = 'bottom';\n        break;\n      case 'ArrowLeft':\n        moveDirection = 'left';\n        break;\n      case 'ArrowRight':\n        moveDirection = 'right';\n        break;\n    }\n\n    HTML_CELL.style[moveDirection] = 0 + 'px';\n    HTML_CELL.style.zIndex = '1';\n\n    setTimeout(() => {\n      movement += TOTAL_PATH / MOVE_SCORE;\n\n      if (movement >= TOTAL_PATH) {\n        movement = TOTAL_PATH;\n      }\n\n      HTML_CELL.style[moveDirection] = -TOTAL_PATH + 'px';\n    }, 10);\n  }\n\n  checkWinState() {\n    const FIELD = this.FIELD;\n\n    FIELD.forEach((row) => {\n      row.forEach((column) => {\n        if (column === 2048) {\n          this.winStatus = true;\n        }\n      });\n    });\n\n    return this.winStatus;\n  }\n}\n\nmodule.exports = { GameClass };\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","$197cd56b15c33885$require$GameClass","$c8dc294372a77044$exports","GameClass","protoProps","staticProps","DOM_CELLS","instance","Constructor","HTML_CELLS","HTML_MATRIX","madeMove","isGameStarted","winStatus","score","value","min","max","Math","floor","random","matrix","matrixCopy","map","elem","row","column","FREE_FIELD_CELLS","tempRow","push","INDEX_OF_RANDOM_ROW","randomNumber","RANDOM_ROW","RANDOM_CELL","CELL_VALUE","selectedRow","selectedColumn","j","data","repeat","_loop","columnCopy","moveCount","after","before","isObjectEmpty","forEach","limith","moveList","_this","i1","field","direction","reversedField","rotateMatrix","moveData","moveLeft","mergeLeft","moveRight","mergeRight","reverseRotate","prevField","FIELD","htmlField","prevFieldCopy","counter","canMove","firstChild","removeChild","lastChild","HTML_CELL","document","createElement","innerText","classList","style","zIndex","concat","animateMovement","appendChild","setTimeout","HTML_EL","hasEmptySpace","HTML_CELL1","COORDS","randomCell","MOVE_SCORE","TOTAL_PATH","SELL_SIZE","moveDirection","movement","array","OUTPUT_ARRAY","$197cd56b15c33885$var$HTML_CELLS","querySelectorAll","$197cd56b15c33885$var$Game","$197cd56b15c33885$var$eventListener","keyEvent","PREV_FIELD","moveField","visualize","querySelector","canMoveHorizontaly","canMoveVerticaly","display","removeEventListener","opacity","remove","makeMatrix","body","addEventListener","add","secEl","cell","innerHTML"],"version":3,"file":"index.6da13912.js.map"}